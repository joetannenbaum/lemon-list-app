# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

app_id = CredentialsManager::AppfileConfig.try_fetch_value(:package_name)
new_app_id = app_id

platform :android do

  desc 'Updates the app identifier, display name and icon for alpha, beta, and production releases'
  lane :prep_release_type do
    releaseType = ENV['RN_RELEASE_TYPE'] || 'production'

      # update android suffix back to neutral
      set_value_in_build(
        app_project_dir: './app',
        key: 'applicationIdSuffix',
        value: ''
      )

    if releaseType != 'production'
      suffix = ENV['BUNDLE_SUFFIX'] || releaseType
      new_app_id = "#{new_app_id}.#{suffix}"
      # update android suffix
      set_value_in_build(
        app_project_dir: './app',
        key: 'applicationIdSuffix',
        value: ".#{suffix}"
      )
    end

    UI.message "\n\nSetting app identifier to: #{new_app_id}"

    # If we're doing a prod build, no need to change icons and such
    # TODO: Remove this once we're out of Beta
    # next if releaseType == 'production'

    # See all available options at: https://github.com/HazAT/badge
    UI.message "\n\nUpdating app icon with #{releaseType} badge"

    add_badge(
      custom: "#{Dir.pwd}/beta-badge-light@3x.png",
      glob: "/app/src/main/res/mipmap**/{ic_launcher_foreground,ic_launcher_round,ic_launcher}.{png,PNG}", # note no dot in path
      alpha: releaseType == 'alpha',
    )
  end

  desc "Submit a new Beta Build to Play Store"
  lane :internal do
    ensure_git_branch(branch: ENV['FASTLANE_GIT_BRANCH'])
    ensure_git_status_clean

    Dir.chdir('../..') do
      sh('yarn')
    end

    prep_release_type

    increment_version_code(app_project_dir: './app')

    gradle(task: 'clean')

    gradle(
      print_command: false, # Let's not print the passwords to command line, thanks
      task: 'bundle',
      build_type: 'Release',
      properties: {
        'android.injected.signing.store.file' => "#{Dir.pwd}/../app/#{ENV['ANDROID_KEYSTORE_FILE']}",
        'android.injected.signing.store.password' => ENV['ANDROID_KEYSTORE_PASSWORD'],
        'android.injected.signing.key.alias' => ENV['ANDROID_KEYSTORE_ALIAS'],
        'android.injected.signing.key.password' => ENV['ANDROID_KEYSTORE_ALIAS_PASSWORD'],
        'manifestPlaceholders.urlScheme' => "lemonlist#{ENV['BUNDLE_SUFFIX'] || ''}"
      }
    )

    upload_to_play_store(
      track: 'internal',
      release_status: 'draft',
    )

    # Reset all of the temporary stuff we just did (identifier, app icon, etc)
    reset_git_repo(
      skip_clean: true,
      force: true
    )

    # Re-increment the build number so it matches
    # Going to do this manually for now, figure out a plan for later
    # increment_version_name(app_project_dir: './android/app', bump_type: 'minor')
    increment_version_code(app_project_dir: './app')

    git_commit(path: './app/build.gradle', message: 'Bump build (Android)')

    push_to_git_remote

    send_build_to_bugsnag

    versionName = get_version_name(
      gradle_file_path: "./app/build.gradle",
      ext_constant_name: "versionName"
    )

    bugsnag_sourcemaps_upload(
      api_key: ENV['BUGSNAG_KEY'],
      app_version: versionName,
      platform: 'android',
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
